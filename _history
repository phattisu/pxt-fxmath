{"entries":[{"timestamp":1757074855876,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":131,"diffs":[[1,"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>"]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":363,"diffs":[[1," "]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":209,"length1":31,"diffs":[[1,"    \"additionalFilePaths\": []\n"]]}]}]},{"timestamp":1757075445008,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":44,"length1":13,"diffs":[[1,"    int = 1,\n"]]},{"start1":79,"length1":15,"diffs":[[1,"    float = 0,\n    //% block=\"Shift Integer\"\n    sint = -1,\n"]]},{"start1":142,"length1":68,"diffs":[[1,""]]},{"start1":303,"length1":93,"diffs":[[1,"            case -1: return Fx.toInt(fxv)\n"]]},{"start1":361,"length1":205,"diffs":[[1,""]]}]}]},{"timestamp":1757076044744,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":44,"length1":17,"diffs":[[1,"    int = 0,\n"]]},{"start1":79,"length1":17,"diffs":[[1,"    float = 1,\n"]]},{"start1":110,"length1":143,"diffs":[[1,"    add = 0,\n    sub = 1,\n    mul = 2,\n    div = 3,\n"]]},{"start1":165,"length1":61,"diffs":[[1,""]]},{"start1":326,"length1":97,"diffs":[[1,"            case 0: return Fx.toInt(fxv)\n            case 1: default: return Fx.toFloat(fxv)\n"]]},{"start1":504,"length1":252,"diffs":[[1,"            case 0: return Fx.add(a, b)\n            case 1: return Fx.sub(a, b)\n            case 2: return Fx.mul(a, b)\n"]]}]}]},{"timestamp":1757076643823,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":116,"length1":17,"diffs":[[1,""]]},{"start1":212,"length1":0,"diffs":[[1,"    imul = 0x6,\n    idiv = 0x7,\n    iadd = 0x8\n"]]},{"start1":262,"length1":110,"diffs":[[1,"enum FxMsh {\n    ish = 0x0,\n    lsh = 0x1,\n    rsh = 0x2,\n"]]},{"start1":644,"length1":21,"diffs":[[1,"        switch (op) {\n"]]},{"start1":928,"length1":24,"diffs":[[1,""]]},{"start1":934,"length1":310,"diffs":[[1,""]]}]}]},{"timestamp":1757077243354,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":116,"length1":132,"diffs":[[1,"    //% block=\"\"\n    add  = 0x0,\n    sub  = 0x1,\n    mul  = 0x2,\n    div  = 0x3,\n    min  = 0x4,\n    max  = 0x5,\n"]]},{"start1":232,"length1":87,"diffs":[[1,""]]},{"start1":246,"length1":22,"diffs":[[1,""]]},{"start1":262,"length1":22,"diffs":[[1,""]]},{"start1":278,"length1":22,"diffs":[[1,""]]},{"start1":294,"length1":24,"diffs":[[1,"    ish  = 0x3,\n"]]},{"start1":326,"length1":25,"diffs":[[1,""]]},{"start1":345,"length1":85,"diffs":[[1,""]]},{"start1":620,"length1":45,"diffs":[[1,"    function mop(a: Fx8, op: FxMop, b: Fx8) {\n"]]},{"start1":855,"length1":0,"diffs":[[1,"            case 0x4: return Fx.min(a, b)\n            case 0x5: return Fx.max(a, b)\n"]]},{"start1":980,"length1":47,"diffs":[[1,"    function mopn(fx: Fx8, op: FxMopn, n: number) {\n"]]},{"start1":1053,"length1":183,"diffs":[[1,""]]}]}]},{"timestamp":1757077821471,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1,"length1":13,"diffs":[[1,"enum FxNumFormat {\n"]]},{"start1":564,"length1":25,"diffs":[[1,""]]},{"start1":581,"length1":25,"diffs":[[1,""]]},{"start1":598,"length1":22,"diffs":[[1,""]]},{"start1":615,"length1":24,"diffs":[[1,""]]},{"start1":714,"length1":64,"diffs":[[1,"    function get(fxv: Fx8, numFormat: FxNumFormat) {\n        switch (numFormat) {\n"]]},{"start1":910,"length1":51,"diffs":[[1,"    function op(a: Fx8, op: FxMop, b: Fx8) {\n"]]},{"start1":1144,"length1":26,"diffs":[[1,"        }\n        return Fx8(NaN)\n"]]},{"start1":1323,"length1":26,"diffs":[[1,"        }\n        return Fx8(NaN)\n"]]},{"start1":1364,"length1":55,"diffs":[[1,"    function opn(fx: Fx8, op: FxMopn, n: number) {\n"]]},{"start1":1436,"length1":217,"diffs":[[1,"            case 0x0: Fx.iadd(n, fx)\n            case 0x1: Fx.imul(fx, n)\n            case 0x2: Fx.idiv(fx, n)\n            case 0x3: Fx.leftShift(fx, n)\n            case 0x4: Fx.rightShift(fx, n)\n        }\n        return Fx8(NaN)\n"]]},{"start1":1672,"length1":258,"diffs":[[1,"}\n"]]}]}]},{"timestamp":1757078413970,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":157,"diffs":[[1,"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block></xml>"]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":97,"length1":14,"diffs":[[1,"enum FxMop {\n"]]},{"start1":725,"length1":36,"diffs":[[1,"namespace FxMath {\n"]]},{"start1":745,"length1":45,"diffs":[[1,""]]},{"start1":803,"length1":103,"diffs":[[1,"\n    function get(fxv: Fx8, nfm: FxNfm) {\n"]]},{"start1":868,"length1":93,"diffs":[[1,"            case 0x0: return Fx.toInt(fxv)\n            case 0x1: default: return Fx.toFloat(fxv)\n"]]},{"start1":982,"length1":119,"diffs":[[1,"    function opm(a: Fx8, op: FxMop, b: Fx8): Fx8 {\n"]]},{"start1":1255,"length1":67,"diffs":[[1,""]]},{"start1":1426,"length1":56,"diffs":[[1,""]]},{"start1":1726,"length1":53,"diffs":[[1,""]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":209,"length1":44,"diffs":[[1,""]]}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1757074855875,"editorVersion":"2.0.56","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>","main.ts":" ","README.md":" ","assets.json":"","pxt.json":"{\n    \"name\": \"pxt-fxmath\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1757076656170,"editorVersion":"2.0.56","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block></xml>","main.ts":"\nenum FxNumFormat {\n    //% block=\"Integer\"\n    int   = 0x0,\n    //% block=\"Float\"\n    float = 0x1,\n}\n\nenum FxMop {\n    add  = 0x0,\n    sub  = 0x1,\n    mul  = 0x2,\n    div  = 0x3,\n    min  = 0x4,\n    max  = 0x5,\n    imul = 0x6,\n    idiv = 0x7,\n    iadd = 0x8,\n}\n\nenum FxMsh {\n    ish = 0x0,\n    lsh = 0x1,\n    rsh = 0x2,\n}\n\nnamespace FxMath {\n\n    function set(x: number) {\n        return Fx8(x)\n    }\n\n    function get(fxv: Fx8, numFormat: FxNumFormat) {\n        switch (numFormat) {\n            case 0x0: return Fx.toInt(fxv)\n            case 0x1: default: return Fx.toFloat(fxv)\n        }\n    }\n\n    function mop(a: Fx8, op: FxMop, b: Fx8) {\n        switch (op) {\n            case 0x0: return Fx.add(a, b)\n            case 0x1: return Fx.sub(a, b)\n            case 0x2: return Fx.mul(a, b)\n            case 0x3: return Fx.div(a, b)\n            case 0x4: return Fx.min(a, b)\n            case 0x5: return Fx.max(a, b)\n            case \n        }\n    }\n}\n","README.md":" ","assets.json":"","pxt.json":"{\n    \"name\": \"pxt-fxmath\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1757078458009,"editorVersion":"2.0.56","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block></xml>","main.ts":"\nenum FxNfm {\n    //% block=\"Integer\"\n    int   = 0x0,\n    //% block=\"Float\"\n    float = 0x1,\n}\n\nenum FxMopm {\n    //% block=\"+\"\n    add = 0x0,\n    //% block=\"-\"\n    sub = 0x1,\n    //% block=\"*\"\n    mul = 0x2,\n    //% block=\"/\"\n    div = 0x3,\n}\n\nenum FxMopr {\n    //% block=\"min\"\n    min = 0x0,\n    //% block=\"max\"\n    max = 0x1,\n}\n\nenum FxMopn {\n    //% block=\"int +\"\n    iadd = 0x0,\n    //% block=\"int *\"\n    imul = 0x1,\n    //% block=\"int /\"\n    idiv = 0x2,\n    //% block=\"sh left\"\n    lsh  = 0x4,\n    //% block=\"sh right\"\n    rsh  = 0x5,\n}\n\nenum FxMopo {\n    //% block=\"absolute\"\n    abs   = 0x0,\n    //% block=\"negative\"\n    neg   = 0x1,\n    //% block=\"floor\"\n    floor = 0x2,\n    //% block=\"ceiling\"\n    ceil  = 0x3,\n}\n\n//% block=\"\"\nnamespace FxMath {\n\n    function set(x: number) {\n        return Fx8(x)\n    }\n\n    function get(fxv: Fx8, nfm: FxNfm) {\n        switch (nfm) {\n            case 0x0: return Fx.toInt(fxv)\n            case 0x1: default: return Fx.toFloat(fxv)\n        }\n    }\n\n    function opm(a: Fx8, op: FxMopm, b: Fx8): Fx8 {\n        switch(op) {\n            case 0x0: return Fx.add(a, b)\n            case 0x1: return Fx.sub(a, b)\n            case 0x2: return Fx.mul(a, b)\n            case 0x3: return Fx.div(a, b)\n        } return Fx8(NaN)\n    }\n\n    function opr(a: Fx8, op: FxMopr, b: Fx8) {\n        switch(op) {\n            case 0x0: Fx.min(a, b)\n            case 0x1: Fx.max(a, b)\n        } return Fx8(NaN)\n    }\n\n    function opn(x: Fx8, op: FxMopn, n: number): Fx8 {\n        switch(op) {\n            case 0x0: Fx.iadd(n, x)\n            case 0x1: Fx.imul(x, n)\n            case 0x2: Fx.idiv(x, n)\n            case 0x3: Fx.leftShift(x, n)\n            case 0x4: Fx.rightShift(x, n)\n        } return Fx8(NaN)\n    }\n\n    function opo(op: FxMopo, x: Fx8): Fx8 {\n        switch(op) {\n            case 0x0: return Fx.abs(x)\n            case 0x1: return Fx.neg(x)\n            case 0x2: return Fx.floor(x)\n            case 0x3: return Fx.ceil(x)\n        } return Fx8(NaN)\n    }\n}","README.md":" ","assets.json":"","pxt.json":"{\n    \"name\": \"pxt-fxmath\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1757079262977}